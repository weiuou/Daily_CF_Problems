/*
2 * x + 1 <= n，x >= 1，则 n <= 2 的时候一定无法结束游戏
能拿哪些位置的东西？
打表，发现 n <= 2 以及 n 为偶数的情况都无解，因为最后一堆始终拿不了
n >= 3 且为奇数的情况怎么做？
后半部分只能通过前面才能拿走
x 和 x - 1 分别对应 (x, 2 * x, 2 * x + 1) 以及 (x - 1, 2 * x - 2, 2 * x - 1)，没交集
考虑从大到小枚举 x，x 最大是 (n - 1) / 2
直到 2 * x 以及 2 * x + 1 都被拿光之后，才能减小 x
最后可能 1 没有拿完，特判一下
*/

int n, a[N];

void meibao() {
    cin >> n;
    for (int i = 1; i <= n; i++) {
        cin >> a[i];
    }

    if (n <= 2 || n % 2 == 0) {
        cout << "-1\n";
        return;
    }

    int res = 0;
    for (int i = (n - 1) / 2; i > 0; i--) {
        int cnt = max(a[2 * i], a[2 * i + 1]);
        a[2 * i] = 0;
        a[2 * i + 1] = 0;
        a[i] -= cnt;
        res += cnt;
        a[i] = max(a[i], 0);
    }

    if (a[1] > 0) {
        res += a[1];
    }
    cout << res << "\n";
} 
