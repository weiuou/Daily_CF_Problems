"""
n 个数两两不同
取 k 个子集，使得这 k 个子集的和都不同，k <= n * (n + 1) / 2
不妨先排个序
n 个数能弄出来 n * (n + 1) / 2 个区间，于是从区间的角度考虑
先把所有的 s[1..i] 的前缀和拿出来，这个肯定不重复
去掉最小的那个数，即考虑所有的 s[2...i]，这个也是不会重复的
去掉最小的两个数，考虑所有的 s[3...i]
- 首先所有的 s[3...i] 和 s[2...i] 一定不会重复
- 那么 s[3...i] 和某个 s[1...j] 会不会相等呢？这需要 s[1...2] == s[j + 1...i]，倘若 j + 1 < i 则这个事情一定不会成立
  如果 j + 1 = i，则有可能存在 s[1...2] = a[i]
如果是只去掉 a[2] 呢？即考虑 s[1...i] - a[2] 会不会和某个 s[1...j] 相等，显然只有 i = 1 的时候相等
如果是只去掉 a[3] 呢？即考虑 s[1...i] - a[3] 会不会和某个 s[1...j] 相等，假如我们 i 从 4 开始取，就还好，必然不可能相等
"""

n, k = map(int, input().split())
a = list(map(int, input().split()))
a.sort()
a = [0] + a

cnt = 0
for i in range(0, n + 1):
    for j in range(i + 1, n + 1):
        if cnt >= k:
            break
        cnt += 1
        res = []
        for pt in range(1, j + 1):
            if pt != i:
                res.append(a[pt])
        print(len(res), end=' ')
        print(*res)
